const Mongodb=require('mongodb');
const ObjectId= Mongodb.ObjectId;
const {getdb}=require('../util/database');

class User{
    constructor(name,email,cart,id){
        this.name=name;
        this.email=email;
        this.cart=cart;
        this._id=id;
    }

    //to save a user
    save(){
        let db=getdb();
        return db.collection('users').insertOne(this)
        .then(user=>{
            console.log("user added");
            return user;
        })
        .catch(err=>console.log("while adding user",err))
    }
    //find by id
   static findById(id){
        console.log(id);
        const db=getdb();
        return db.collection('users').find({ _id:new ObjectId(id) })
        .next()
        .then(user=>{
            return user;
        })
        .catch(err=>console.log(err))
    } 

    //add and update cart
     addandupdatecart(productid){
   
         const productindex=this.cart.items.findIndex(product_index=>{
             return product_index.prodId.toString()==productid.toString();
         })
         let new_qty=1;
         let toupdate=[...this.cart.items];
         if(productindex>=0){
            new_qty=toupdate[productindex].quantity+1;
            toupdate[productindex].quantity=new_qty;
         }
         else{
            toupdate.push({
                prodId:productid,
                quantity:new_qty,
            })
         }
         const updatedcart={
            items:toupdate,
         }
         const db=getdb();
        return db.collection('users').updateOne({_id:new ObjectId(this._id)},{$set:{cart:updatedcart}})
        .then(result=>{
     
            return result;
        })
        .catch(err=>{
            console.log("updating product err",err);
        })
    }

}
module.exports=User;